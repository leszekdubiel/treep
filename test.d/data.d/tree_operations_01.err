(as t (new) (do (ins (t) a +1.0) (ins (t) b +2.0) (ins (t) c +3.0) (ins (t) d +4.0) (ins (t) e +5.0) (prev (frst (t))))) = (void)
(new) = (tree)
(as t (new) (do (t))) = (tree)
(as t (new) (do (ins (t) alfa +1.0) (t))) = (tree alfa +1.0)
(as t (new) (do (ins (t) alfa +1.0) (ins (t) beta +2.0) (t))) = (tree alfa +1.0 beta +2.0)
(as t (new) (do (ins (t) alfa +1.0) (ins (t) beta +2.0) (ins (t) gamma +3.0) (t))) = (tree alfa +1.0 beta +2.0 gamma +3.0)
(as t (new) (do (ins (t) alfa +1.0) (ins (t) beta (as q (new) (do (ins (q) be +2.1) (ins (q) ta +2.9) (q)))) (ins (t) gamma +3.0) (t))) = (tree alfa +1.0 beta (tree ...) gamma +3.0)
(as t (new) (do (ins (t) alfa +1.0) (ins (t) beta (as q (new) (do (ins (q) be +2.1) (ins (q) ta +2.9) (q)))) (ins (t) gamma +3.0) (root (t)))) = (node beta (tree ...))
(as t (new) (do (ins (t) alfa +1.0) (ins (t) beta (as q (new) (do (ins (q) be +2.1) (ins (q) ta +2.9) (q)))) (ins (t) gamma +3.0) (vlue (root (t))))) = (tree be +2.1 ta +2.9)
(as t (new) q (new) (ref (t) (t))) = (yes)
(as t (new) q (new) (ref (t) (q))) = (no)
(as t (new) (do (any (t)))) = (no)
(as t (new) (do (qty (t)))) = 0.0
(as t (new) (do (ins (t) alfa +1.0) (any (t)))) = (yes)
(as t (new) (do (ins (t) alfa +1.0) (qty (t)))) = +1.0
(as t (new) (do (ins (t) alfa +1.0) (ins (t) beta +2.0) (any (t)))) = (yes)
(as t (new) (do (ins (t) alfa +1.0) (ins (t) beta +2.0) (qty (t)))) = +2.0
(as t (new) (do (ins (t) alfa +1.0) (def (t) beta))) = (no)
(as t (new) (do (ins (t) alfa +1.0) (ins (t) beta +2.0) (def (t) beta))) = (yes)
(as t (new) (do (ins (t) alfa +1.0) (del (t) alfa) (def (t) beta))) = (no)
(as t (new) (do (ins (t) alfa +1.0) (ins (t) beta +2.0) (ins (t) gamma +3.0) (t))) = (tree alfa +1.0 beta +2.0 gamma +3.0)
(as t (new) (do (ins (t) alfa +1.0) (ins (t) beta +2.0) (ins (t) gamma +3.0) (get (t) beta))) = +2.0
(as t (new) (do (ins (t) alfa +1.0) (ins (t) beta +2.0) (ins (t) gamma +3.0) (set (t) beta -99.9))) = (tree alfa +1.0 beta -99.9 gamma +3.0)
(as t (new) (do (ins (t) alfa +1.0) (ins (t) beta +2.0) (ins (t) gamma +3.0) (get (root (t))))) = +2.0
(as t (new) (do (ins (t) alfa +1.0) (ins (t) beta +2.0) (ins (t) gamma +3.0) (set (root (t)) -99.9))) = (node beta -99.9)
(as t (new) (do (ins (t) a +1.0) (ins (t) b +2.0) (ins (t) c +3.0) (ins (t) d +4.0) (ins (t) e +5.0) (t))) = (tree a +1.0 b +2.0 c +3.0 d +4.0 e +5.0)
(as t (new) (do (ins (t) a +1.0) (ins (t) b +2.0) (ins (t) c +3.0) (ins (t) d +4.0) (ins (t) e +5.0) (root (t)))) = (node b +2.0)
(as t (new) (do (ins (t) a +1.0) (ins (t) b +2.0) (ins (t) c +3.0) (ins (t) d +4.0) (ins (t) e +5.0) (frst (t)))) = (node a +1.0)
(as t (new) (do (ins (t) a +1.0) (ins (t) b +2.0) (ins (t) c +3.0) (ins (t) d +4.0) (ins (t) e +5.0) (last (t)))) = (node e +5.0)
(as t (new) (do (ins (t) a +1.0) (ins (t) b +2.0) (ins (t) c +3.0) (ins (t) d +4.0) (ins (t) e +5.0) (prev (frst (t))))) = (void)
