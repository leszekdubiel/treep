
* test (x) 
	(if 
		(not (gre (x) 0.0)) (info (x) " less or equal Nought")
		(not (gre (x) +1.0)) (info (x) " less or equal One")
		(not (gre (x) +2.0)) (info (x) " less or equal Two")
		(not (gre (x) +3.0)) (info (x) " less or equal Three")
		(not (gre (x) +4.0)) (info (x) " less or equal Four")
		(not (gre (x) +5.0)) (info (x) " less or equal Five")
		(not (gre (x) +6.0)) (info (x) " less or equal Six")
		(not (gre (x) +7.0)) (info (x) " less or equal Seven")
		(not (gre (x) +8.0)) (info (x) " less or equal Eight")
		(not (gre (x) +9.0)) (info (x) " less or equal Nine")
		(not (gre (x) +10.0)) (info (x) " less or equal Ten")
		(not (gre (x) +11.0)) (info (x) " less or equal Eleven")
		(not (gre (x) +12.0)) (info (x) " less or equal Twelve")
		(not (gre (x) +13.0)) (info (x) " less or equal Thirteen")
		(not (gre (x) +14.0)) (info (x) " less or equal Fourteen")
		(not (gre (x) +15.0)) (info (x) " less or equal Fifteen")
		(not (gre (x) +16.0)) (info (x) " less or equal Sixteen")
		(not (gre (x) +17.0)) (info (x) " less or equal Seventeen")
		(not (gre (x) +18.0)) (info (x) " less or equal Eighteen")
		(not (gre (x) +19.0)) (info (x) " less or equal Nineteen")
		(not (gre (x) +20.0)) (info (x) " less or equal Twenty")
		(not (gre (x) +21.0)) (info (x) " less or equal Twenty-one ...")
		(not (gre (x) +30.0)) (info (x) " less or equal Thirty")
		(not (gre (x) +40.0)) (info (x) " less or equal Forty")
		(not (gre (x) +50.0)) (info (x) " less or equal Fifty")
		(not (gre (x) +60.0)) (info (x) " less or equal Sixty")
		(not (gre (x) +70.0)) (info (x) " less or equal Seventy")
		(not (gre (x) +80.0)) (info (x) " less or equal Eighty")
		(not (gre (x) +90.0)) (info (x) " less or equal Ninety")
		(not (gre (x) +100.0)) (info (x) " less or equal One hundred")
		(not (gre (x) +101.0)) (info (x) " less or equal One hundred and one ...")
		(not (gre (x) +102.0)) (info (x) " less or equal One thousand")
		(not (gre (x) +1000000.0)) (info (x) " less or equal One million")
		(not (gre (x) +1000000000000.0)) (info (x) " less or equal One billion")
		(void)
	)

* multi (x y) 
	(do 
		(test (x))
		(if 
			(zer (x)) (do (info "zero occured...") (void))
			(gre (abs (x)) (div (max) +12.0)) (do (info "number too big...") (void))
			(multi (mul (x) (y)) (y))
		)
	)

(info "8 and 2")
(multi +8.0 +2.0)
(info "8 and 1.1")
(multi +8.0 +1.1)
(info "max and 0.1")
(multi (div (max) +20.0) +0.1)

